{"version":3,"sources":["webpack:///webpack/bootstrap c87a4ca92eae8d1cd17f","webpack:///./server/RamlSpec_test.ts","webpack:///external \"source-map-support\"","webpack:///external \"chai\"","webpack:///./server/RamlSpec.ts","webpack:///./server/TerseJsonschema.ts","webpack:///external \"raml-parser\"","webpack:///external \"cson-parser\"","webpack:///external \"is-my-json-valid\"","webpack:///external \"lodash\""],"names":["emptyJsonBody","ParseType","ParseError","ParseError.constructor","ParseError.toMessage","ParseResult","ParseResult.constructor","ParsedSchema","ParsedSchema.constructor","ParsedExample","ParsedExample.constructor","parseGlobalTypes","Route","Route.constructor","RamlEnhancer","RamlEnhancer.constructor","RamlEnhancer.registerRoute","RamlEnhancer.enhanceBody","RamlEnhancer.enhanceMethod","RamlEnhancer.enhanceResource","RamlEnhancer.walk","RamlSpec","RamlSpec.constructor","RamlSpec.getData","RamlSpec.getRoutes","RamlSpec.getMethods","RamlSpec.getMethod","RamlSpec.extractResponseJsonBody","RamlSpec.extractPayloadJsonBody","validate","ParseErrors","ParseErrors.constructor","ParseErrors.registerError","ParseErrors.registerErrors","Validator","Validator.constructor","Validator.validate","Validator.validateRoute","Validator.validatePayload","Validator.validateResponse","loadAsync","parseNode","parseOf","parseString","parseRequired","parseObject","parseArray","parse"],"mappings":"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ASA,CAACA,CAACA,CAACA;aACnBA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA,OAAOA,CAACA,UAACA,MAAcA;iBACjDA,KAAIA,CAACA,WAAWA,CAACA,MAAMA,CAACA,SAASA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA;aACpDA,CAACA,CAACA;SACNA,CAACA;KACLA,CAACA;KAEOJ,sCAAeA,GAAvBA,UAAwBA,CAAWA,EAAEA,SAAiBA;SAAtDK,iBAOCA;SANGA,CAACA,CAACA,WAAWA,GAAGA,SAASA,GAAGA,CAACA,CAACA,WAAWA,CAACA;SAC1CA,EAAEA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA;aACZA,CAACA,CAACA,OAAOA,CAACA,OAAOA,CAACA,UAACA,CAASA,IAAKA,YAAIA,CAACA,aAAaA,CAACA,CAACA,CAACA,EAArBA,CAAqBA,CAACA,CAACA;aACxDA,IAAIA,CAACA,aAAaA,CAACA,CAACA,CAACA,WAAWA,EAAEA,CAACA,CAACA,OAAOA,CAACA,CAACA;SACjDA,CAACA;SACDA,IAAIA,CAACA,IAAIA,CAACA,CAACA,EAAEA,CAACA,CAACA,WAAWA,CAACA,CAACA;KAChCA,CAACA;KAEOL,2BAAIA,GAAZA,UAAaA,IAAwBA,EAAEA,SAAiBA;SAAxDM,iBAKCA;SAJGA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA;aAClBA,MAAMA,CAACA;SACXA,CAACA;SACDA,IAAIA,CAACA,SAASA,CAACA,OAAOA,CAACA,UAACA,CAAWA,IAAKA,YAAIA,CAACA,eAAeA,CAACA,CAACA,EAAEA,SAASA,CAACA,EAAlCA,CAAkCA,CAACA,CAACA;KAChFA,CAACA;KACLN,mBAACA;AAADA,EAACA,IAAA;AAGD;KAKIO,kBAAYA,IAAeA;SACvBC,IAAIA,CAACA,YAAYA,GAAGA,gBAAgBA,CAACA,IAAIA,CAACA,CAACA;SAC3CA,IAAIA,QAAQA,GAAGA,IAAIA,YAAYA,CAACA,IAA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","file":"server\\RamlSpec_test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c87a4ca92eae8d1cd17f\n **/","require('source-map-support').install();\r\nimport RamlSpec = require('./RamlSpec');\r\nimport chai = require('chai');\r\n\r\nvar expect = chai.expect;\r\n\r\nvar FILE = './fixture/api.raml';\r\n\r\ndescribe('RamlSpec', function(): void {\r\n    var s: RamlSpec.RamlSpec;\r\n    it('should fetch async', function(done): void {\r\n        RamlSpec.loadAsync(FILE)\r\n            .then(function(data: RamlSpec.RamlSpec) {\r\n                s = data;\r\n                expect(data.getData().version).to.equal('1');\r\n                done();\r\n            }).done();\r\n    });\r\n\r\n    it('returns data', function(): void {\r\n        expect(s.getData().version).to.equal('1');\r\n    });\r\n\r\n    it('returns routes', function(): void {\r\n        expect(s.getRoutes().length).to.equal(3);\r\n    });\r\n\r\n    it('should get Methods', function(): void {\r\n        expect(s.getMethods('test2/{id}').length).to.equal(1);\r\n        expect(s.getMethods('/test2/{id}').length).to.equal(1);\r\n        expect(s.getMethods('/bla}').length).to.equal(0);\r\n    });\r\n\r\n    it('should get method', function(): void {\r\n        expect(s.getMethod('test2/{id}', 'post')).to.include.keys('displayName');\r\n        expect(s.getMethod('test2/{id}', 'get')).to.be.not.ok;\r\n    });\r\n\r\n    it('should extract Payload Json body', function(): void {\r\n        var pay = s.extractPayloadJsonBody('test1', 'put');\r\n        expect(pay.example).to.be.a('string');\r\n        expect(pay.schema).to.be.a('string');\r\n        expect(pay.parsedExample.result).to.be.a('object');\r\n        expect(pay.parsedSchema.result).to.be.a('object');\r\n    });\r\n\r\n    it('should extract missing Payload Json body gracefully', function(): void {\r\n        var empty = RamlSpec.emptyJsonBody();\r\n        expect(s.extractPayloadJsonBody('test1', 'post')).to.eql(empty);\r\n        expect(s.extractPayloadJsonBody('test2', 'post')).to.eql(empty);\r\n    });\r\n\r\n    it('should extract Response Json body', function(): void {\r\n        var pay = s.extractResponseJsonBody('test1', 'put', '200');\r\n        expect(pay.example).to.be.a('string');\r\n        expect(pay.schema).to.be.a('string');\r\n        expect(pay.parsedExample.result).to.be.a('object');\r\n        expect(pay.parsedSchema.result).to.be.a('object');\r\n    });\r\n\r\n    it('should extract missing Response Json body gracefully', function(): void {\r\n        var empty = RamlSpec.emptyJsonBody();\r\n        expect(s.extractResponseJsonBody('test1', 'post', '200')).to.eql(empty);\r\n        expect(s.extractResponseJsonBody('test2', 'post', '200')).to.eql(empty);\r\n    });\r\n\r\n    it('works without global types', function(done): void {\r\n        RamlSpec.loadAsync('./fixture/no-global-types.raml')\r\n            .then(function(obj) {\r\n                var m = obj.getMethod('test', 'post');\r\n                expect(m).be.instanceOf(Object);\r\n                done();\r\n            });\r\n    });\r\n\r\n});\r\n\r\n\r\ndescribe('ParseErrors', function(): void {\r\n    it('should parse a json errorr', function(): void {\r\n        var errors = new RamlSpec.ParseErrors();\r\n        var body = RamlSpec.emptyJsonBody();\r\n        body.parsedExample = new RamlSpec.ParsedExample('{\"hello\": \"world}');\r\n        errors.registerErrors('url', 'method', 'status', body);\r\n        expect(errors.errors[0].message).to.equal(\"json parsing error: Unexpected end of input\");\r\n\r\n    })\r\n\r\n    it('should parse a cson error', function(): void {\r\n        var errors = new RamlSpec.ParseErrors();\r\n        var body = RamlSpec.emptyJsonBody();\r\n        body.parsedExample = new RamlSpec.ParsedSchema(\r\n            \"key: 'string\"\r\n        );\r\n        errors.registerErrors('url', 'method', 'status', body);\r\n        expect(errors.errors[0].message).to.equal(\"cson parsing error: missing '\");\r\n\r\n    })\r\n\r\n    it('should parse a terseJsonschema error', function(): void {\r\n        var errors = new RamlSpec.ParseErrors();\r\n        var body = RamlSpec.emptyJsonBody();\r\n        body.parsedSchema = new RamlSpec.ParsedSchema(\"key: 'stri'\");\r\n        errors.registerErrors('url', 'method', 'status', body);\r\n        expect(errors.errors[0].message).to.equal(\"terseJson parsing error: Type is not defined: stri\");\r\n\r\n    })\r\n\r\n    it('should parse a validation error', function(): void {\r\n        var errors = new RamlSpec.ParseErrors();\r\n        var body = RamlSpec.emptyJsonBody();\r\n        body.parsedSchema = new RamlSpec.ParsedSchema(\"key: 'string'\");\r\n        body.parsedExample = new RamlSpec.ParsedExample('{\"key\": 1}');\r\n        errors.registerErrors('url', 'method', 'status', body);\r\n        expect(errors.errors[0].message).to.equal(\"data.key: is the wrong type\");\r\n\r\n    })\r\n});\r\n\r\ndescribe('Validator', function(): void {\r\n    it('should validate a schema', function(done) {\r\n        RamlSpec.loadAsync(FILE)\r\n            .then(function(data: RamlSpec.RamlSpec) {\r\n                var validator = new RamlSpec.Validator(data);\r\n                var errors = validator.validate();\r\n                expect(errors.length).to.equal(0);\r\n                done();\r\n            }).done();\r\n    })\r\n})\n\n\n/** WEBPACK FOOTER **\n ** ./server/RamlSpec_test.ts\n **/","module.exports = require(\"source-map-support\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"source-map-support\"\n ** module id = 1\n ** module chunks = 0 1\n **/","module.exports = require(\"chai\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"chai\"\n ** module id = 2\n ** module chunks = 0 1\n **/","/// <reference path=\"../typings/references.d.ts\" />\r\nimport raml = require('raml-parser');\r\nimport CSON = require('cson-parser');\r\nimport TerseJsonschema = require('./TerseJsonschema');\r\nimport validator = require('is-my-json-valid');\r\nimport _ = require('lodash');\r\n\r\ninterface JsonBody {\r\n        schema?: string;\r\n        example?: string;\r\n        parsedSchema?: ParsedSchema;\r\n        parsedExample?: ParsedExample;\r\n}\r\n\r\nexport function emptyJsonBody(): JsonBody {\r\n    return {\r\n        schema: null,\r\n        example: null,\r\n        parsedSchema: new ParsedSchema(null, null),\r\n        parsedExample: new ParsedExample(null)\r\n    }\r\n}\r\n\r\ninterface Body {\r\n    'application/json': JsonBody;\r\n}\r\n\r\ninterface Response extends raml.Response {\r\n    body: Body;\r\n}\r\n\r\ninterface Responses {\r\n    [idx: string]: Response;\r\n}\r\n\r\ninterface Method extends raml.Method {\r\n    body: Body;\r\n    responses: Responses;\r\n}\r\n\r\ninterface Resource extends raml.Resource {\r\n    absoluteUri: string;\r\n    methods: Method[];\r\n    resources: Resource[];\r\n}\r\n\r\nexport interface Raml extends raml.Raml {\r\n    resources: Resource[];\r\n}\r\n\r\nenum ParseType {cson=1, json, terseJson, yaml}\r\n\r\nclass ParseError {\r\n    type: ParseType;\r\n    error: Error;\r\n    constructor(type: ParseType, error: Error) {\r\n        this.type = type;\r\n        this.error = error;\r\n    }\r\n\r\n    toMessage(): string {\r\n        return `${ParseType[this.type]} parsing error: ${this.error.message}`\r\n    }\r\n}\r\n\r\nclass ParseResult {\r\n    result: Object;\r\n    error: ParseError;\r\n    constructor(result: Object, error: ParseError) {\r\n        this.result = result;\r\n        this.error = error;\r\n    }\r\n}\r\n\r\n\r\nexport class ParsedSchema extends ParseResult {\r\n    constructor(schemaStr: string, globalTypes?: GlobalTypes) {\r\n        schemaStr = schemaStr || null;\r\n        var result: Object = null;\r\n        var error: ParseError = null;\r\n        var schema: Object = null;\r\n        try {\r\n            schema = (schemaStr) ? CSON.parse(schemaStr): null;\r\n        } catch(e) {\r\n            error = new ParseError(ParseType.cson, e);\r\n        }\r\n        if (!error && schema) {\r\n            try {\r\n                result = TerseJsonschema.parse(<TerseJsonschema.Node> schema, globalTypes)\r\n            } catch(e) {\r\n                error = new ParseError(ParseType.terseJson, e);\r\n            }\r\n        }\r\n        super(result, error);\r\n    }\r\n}\r\n\r\nexport class ParsedExample extends ParseResult {\r\n    constructor(exampleStr: string) {\r\n        var result: Object = null;\r\n        var error: ParseError = null;\r\n        try {\r\n            result = (exampleStr) ? JSON.parse(exampleStr): null;\r\n        } catch(e) {\r\n            error = new ParseError(ParseType.json, e);\r\n        }\r\n        super(result, error);\r\n    }\r\n}\r\n\r\ninterface GlobalTypes {\r\n    [idx: string]: TerseJsonschema.Node;\r\n}\r\n\r\n\r\n// extract the global types from the schema. This is needed for correct validation\r\nfunction parseGlobalTypes(ramlObj: raml.Raml): GlobalTypes {\r\n    var types: GlobalTypes = {};\r\n    if (!ramlObj.schemas) {\r\n        return null;\r\n    }\r\n    ramlObj.schemas.forEach((s: raml.Schema): void => {\r\n        Object.keys(s).forEach((t: string): void => {\r\n            types[t] = <TerseJsonschema.Node> CSON.parse(s[t]);\r\n        });\r\n    });\r\n    return types;\r\n}\r\n\r\n\r\n\r\n\r\nclass Route {\r\n    url: string;\r\n    methods: Method[];\r\n    constructor(url: string, methods: Method[]) {\r\n        this.url = url;\r\n        this.methods = methods;\r\n    }\r\n}\r\n\r\ninterface ResourceContaining {\r\n    resources: Resource[];\r\n}\r\n\r\n\r\n\r\nclass RamlEnhancer {\r\n    data: raml.Raml;\r\n    globalTypes: GlobalTypes;\r\n    routes: Route[];\r\n    constructor(data: raml.Raml, globalTypes: GlobalTypes) {\r\n        this.data = data;\r\n        this.globalTypes = globalTypes;\r\n        this.routes = [];\r\n        // cast data as enhanced Raml,\r\n        this.walk(<Raml> data, '');\r\n    }\r\n\r\n    private registerRoute(url: string, methods: Method[]) {\r\n        if (methods) {\r\n            this.routes.push(new Route(url, methods));\r\n        }\r\n    }\r\n\r\n    private enhanceBody(body: Body) {\r\n        if (!body) {\r\n            return;\r\n        }\r\n        var appJson = body['application/json'];\r\n        appJson.parsedSchema = new ParsedSchema(appJson.schema, this.globalTypes);\r\n        appJson.parsedExample = new ParsedExample(appJson.example);\r\n    }\r\n\r\n    private enhanceMethod(method: Method): void {\r\n        this.enhanceBody(method.body);\r\n        if (method.responses) {\r\n            Object.keys(method.responses).forEach((status: string) => {\r\n                this.enhanceBody(method.responses[status].body);\r\n            })\r\n        }\r\n    }\r\n\r\n    private enhanceResource(r: Resource, parentUrl: string): void {\r\n        r.absoluteUri = parentUrl + r.relativeUri;\r\n        if (r.methods) {\r\n            r.methods.forEach((m: Method) => this.enhanceMethod(m));\r\n            this.registerRoute(r.absoluteUri, r.methods);\r\n        }\r\n        this.walk(r, r.absoluteUri);\r\n    }\r\n\r\n    private walk(node: ResourceContaining, parentUrl: string): void {\r\n        if (!node.resources) {\r\n            return;\r\n        }\r\n        node.resources.forEach((r: Resource) => this.enhanceResource(r, parentUrl));\r\n    }\r\n}\r\n\r\n\r\nexport class RamlSpec {\r\n    private data: raml.Raml;\r\n    private _globalTypes: GlobalTypes;\r\n    private _routes: Route[];\r\n\r\n    constructor(data: raml.Raml) {\r\n        this._globalTypes = parseGlobalTypes(data);\r\n        var enhancer = new RamlEnhancer(data, this._globalTypes);\r\n        this._routes = enhancer.routes;\r\n        this.data = data;\r\n    }\r\n\r\n    getData(): Raml {\r\n        return <Raml> this.data;\r\n    }\r\n\r\n    getRoutes(): Route[] {\r\n        return this._routes;\r\n    }\r\n\r\n    getMethods(path: string): Method[] {\r\n        if (path[0] !== '/') {\r\n            path = \"/\" + path;\r\n        }\r\n\r\n        var route = _.find(this._routes, (r: Route) => r.url === path);\r\n\r\n        if (route) {\r\n            return route.methods || [];\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n    getMethod(path: string, methodName: string): Method {\r\n        methodName = methodName.toLowerCase();\r\n        var methods = this.getMethods(path);\r\n        return _.find(methods, (m: Method) => m.method === methodName);\r\n    }\r\n\r\n    extractResponseJsonBody(path: string, methodName: string, status: string): JsonBody {\r\n        var method = this.getMethod(path, methodName);\r\n        // along the way, you could always run into undefined...\r\n        if (method && method.responses[status] && method.responses[status].body) {\r\n            return method.responses[status].body['application/json'] || emptyJsonBody();\r\n        }\r\n        return emptyJsonBody()\r\n    }\r\n\r\n    extractPayloadJsonBody(path: string, methodName: string): JsonBody {\r\n        var method = this.getMethod(path, methodName);\r\n        if (method && method.body) {\r\n            return method.body['application/json'] || emptyJsonBody();\r\n        }\r\n        return emptyJsonBody();\r\n    }\r\n}\r\n\r\nfunction validate(schema: Object, example: Object) {\r\n    var v = validator(schema);\r\n    v(example);\r\n    return v.errors || [];\r\n};\r\n\r\n\r\ninterface ValidationError {\r\n    url: string;\r\n    method: string;\r\n    status: string;\r\n    message: string;\r\n}\r\n\r\nexport class ParseErrors {\r\n    errors: ValidationError[];\r\n    constructor() {\r\n        this.errors = [];\r\n    }\r\n    private registerError(url: string, methodName: string, status: string, message: string) {\r\n        this.errors.push({\r\n            url: url,\r\n            method: methodName,\r\n            status: status || null,\r\n            message: message\r\n        });\r\n    }\r\n    registerErrors(url: string, methodName: string, status: string, body: JsonBody): void {\r\n        if (body.parsedSchema.error) {\r\n            this.registerError(url, methodName, status, body.parsedSchema.error.toMessage());\r\n        }\r\n        if (body.parsedExample.error) {\r\n            this.registerError(url, methodName, status, body.parsedExample.error.toMessage());\r\n        }\r\n        if (body.parsedSchema.result && body.parsedExample.result) {\r\n            var errors = validate(body.parsedSchema.result, body.parsedExample.result);\r\n            errors.forEach((e: validator.Error) => {\r\n                this.registerError(url, methodName, status, `${e.field}: ${e.message}`);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Validator {\r\n    spec: RamlSpec;\r\n    parseErrors: ParseErrors;\r\n    constructor(spec: RamlSpec) {\r\n        this.spec = spec;\r\n        this.parseErrors = new ParseErrors();\r\n    }\r\n    validate(): ValidationError[] {\r\n        this.spec.getRoutes().forEach((r: Route) => {\r\n            this.validateRoute(r);\r\n        });\r\n        return this.parseErrors.errors;\r\n    }\r\n\r\n    private validateRoute(r: Route): void {\r\n        r.methods.forEach((method: Method) => {\r\n            this.validatePayload(r.url, method.method);\r\n            Object.keys(method.responses || {}).forEach((status: string) => {\r\n                this.validateResponse(r.url, method.method, status);\r\n            })\r\n        });\r\n    }\r\n\r\n    private validatePayload(url: string, methodName: string) {\r\n        var body = this.spec.extractPayloadJsonBody(url, methodName);\r\n        this.parseErrors.registerErrors(url, methodName, null, body);\r\n    }\r\n\r\n    private validateResponse(url: string, methodName: string, status: string) {\r\n        var body = this.spec.extractResponseJsonBody(url, methodName, status);\r\n        this.parseErrors.registerErrors(url, methodName, status, body);\r\n    }\r\n}\r\n\r\nexport function loadAsync(path: string) {\r\n    return raml.loadFile(path)\r\n        .then(function(data: raml.Raml) {\r\n            return new RamlSpec(data);\r\n        });\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/RamlSpec.ts\n **/","/// <reference path=\"../typings/references.d.ts\" />\r\n\r\nimport _ = require('lodash');\r\n\r\ninterface ObjectNode {\r\n    [idx: string]: any;\r\n    $raw?: JsonschemaType;\r\n    $oneOf?: Node[];\r\n    $allOf?: Node[];\r\n    $anyOf?: Node[];\r\n    $required?: string;\r\n}\r\n\r\n\r\ntype Type = string;\r\n\r\nexport type Node = ObjectNode | ObjectNode[] | string[] | Type;\r\n\r\ninterface TypeDefs {\r\n    [idx: string]: Node;\r\n}\r\n\r\nexport interface JsonschemaType {\r\n    type: string;\r\n    description?: string;\r\n    properties?: {[idx: string]: JsonschemaNode};\r\n    items?: JsonschemaNode;\r\n    additionalProperties?: boolean;\r\n    required?: string[];\r\n}\r\n\r\ninterface JsonschemaEnum {\r\n    enum: string[];\r\n}\r\n\r\ninterface AllAnyOneOfJsonschemaType {\r\n    [idx: string]: JsonschemaType[];\r\n}\r\n\r\ntype JsonschemaNode = JsonschemaType | AllAnyOneOfJsonschemaType | JsonschemaEnum;\r\n\r\nfunction parseNode(source: Node, defs?: TypeDefs): JsonschemaNode {\r\n    if (_.isArray(source)) {\r\n        return parseArray(<ObjectNode[] | string[]> source, defs);\r\n    }\r\n\r\n    if (_.isObject(source)) {\r\n        var objectSource = <ObjectNode> source;\r\n        if (objectSource.$raw) {\r\n            return objectSource.$raw;\r\n        }\r\n\r\n        if (objectSource.$oneOf) {\r\n            return parseOf('oneOf', objectSource, defs);\r\n        }\r\n\r\n        if (objectSource.$allOf) {\r\n            return parseOf('allOf', objectSource, defs);\r\n        }\r\n        if (objectSource.$anyOf) {\r\n            return parseOf('anyOf', objectSource, defs);\r\n        }\r\n\r\n        return parseObject(objectSource, defs);\r\n    }\r\n\r\n    if (_.isString(source)) {\r\n        return parseString(<Type> source, defs);\r\n    }\r\n\r\n    throw new Error(\"Syntax error, does not support \" + typeof source + \" field\");\r\n}\r\n\r\nfunction parseOf(type: string, source: ObjectNode, defs: TypeDefs): AllAnyOneOfJsonschemaType {\r\n    if (!_.isArray(source['$' + type])) {\r\n        throw new Error(type + \" must be array\");\r\n    }\r\n    var res: AllAnyOneOfJsonschemaType = {};\r\n    res[type] = source['$' + type].map(function(e: Node) {\r\n        return parseNode(e, defs);\r\n    });\r\n    return res;\r\n}\r\n\r\nfunction parseString(source:string, defs: TypeDefs): JsonschemaNode {\r\n    switch (source) {\r\n        case \"string\":\r\n        case \"integer\":\r\n        case \"number\":\r\n        case \"boolean\":\r\n        case \"null\":\r\n            return {type: source};\r\n\r\n        case \"date-time\":\r\n        case \"email\":\r\n        case \"uri\":\r\n            return {type: 'string', format: source};\r\n\r\n        default:\r\n            if (!defs || !defs[source]) {\r\n                throw new Error(\"Type is not defined: \" + source);\r\n            }\r\n            return parseNode(defs[source]);\r\n\r\n    }\r\n}\r\n\r\nfunction parseRequired(source: ObjectNode) {\r\n    var sourceItems = Object.keys(source).filter(function(f) {\r\n        return f !== '$required';\r\n    });\r\n    // if empty required, nothing is required\r\n    if (source.$required === '') {\r\n        return [];\r\n    }\r\n\r\n    // if no required, then everything is required\r\n    if (!source.$required) {\r\n        return sourceItems;\r\n    }\r\n\r\n    if (!_.isString(source.$required)) {\r\n        throw new Error('$required should be string');\r\n    }\r\n\r\n    var required = source.$required.split(' ');\r\n\r\n    required.forEach(function(r) {\r\n        if (sourceItems.indexOf(r) === -1) {\r\n            throw new Error(\"Required non-exist field: \" + r);\r\n        }\r\n    });\r\n\r\n    return required;\r\n}\r\n\r\n\r\nfunction parseObject(source: ObjectNode , defs: TypeDefs): JsonschemaType {\r\n    var obj: JsonschemaType = {\r\n        type: 'object',\r\n        properties: {},\r\n        required: parseRequired(source),\r\n        additionalProperties: false\r\n    };\r\n\r\n    Object.keys(source).forEach(function(k) {\r\n        if (k !== '$required') {\r\n            obj.properties[k] = parseNode(source[k], defs);\r\n        }\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\nexport function parseArray(array: Node[] | string[], defs: TypeDefs): JsonschemaNode {\r\n    if (array.length === 0) {\r\n        throw new Error(\"array must be length > 0\");\r\n    }\r\n\r\n    if (array.length > 1) {\r\n        return <JsonschemaEnum> {enum: array};\r\n    }\r\n\r\n    return {\r\n        type: \"array\",\r\n        items: parseNode(array[0], defs)\r\n    };\r\n}\r\n\r\n\r\nexport function parse(source: Node, defs?: TypeDefs) {\r\n    if (_.isArray(source) || _.isObject(source)) {\r\n        return parseNode(source, defs);\r\n    }\r\n    throw new Error('source must be Array or Object');\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/TerseJsonschema.ts\n **/","module.exports = require(\"raml-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-parser\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"cson-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cson-parser\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"is-my-json-valid\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"is-my-json-valid\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"lodash\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash\"\n ** module id = 8\n ** module chunks = 0 1\n **/"],"sourceRoot":""}